{"ast":null,"code":"import { PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS } from \"../constants/productConstants\";\nimport axios from 'axios';\nimport { productListReducer } from \"../reducers/productReducers\";\n\nconst listProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    }); //ajax request to server\n\n    const {\n      data\n    } = await axios.get(\"http://localhost:5000/api/products\");\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst listProductsFiltered = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    }); //ajax request to server\n\n    const {\n      items\n    } = await axios.get(\"http://localhost:5000/api/products\");\n    self.items = response.data.record.filter(item => item.fields.fxPage === \"TestPage\").map(item => {\n      return {\n        id: item.id,\n        ...item.fields\n      };\n    });\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: items\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst detailsProduct = productId => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.get(\"http://localhost:5000/api/products\" + productId);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { listProducts, detailsProduct };","map":{"version":3,"sources":["/home/harsh/Desktop/22168-HarshMaru/sde/ecom/ecom/frontend/src/actions/productActions.js"],"names":["PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","axios","productListReducer","listProducts","dispatch","type","data","get","payload","error","message","listProductsFiltered","items","self","response","record","filter","item","fields","fxPage","map","id","detailsProduct","productId"],"mappings":"AAAA,SAASA,oBAAT,EAA+BC,uBAA/B,EAAwDC,uBAAxD,EAAiFC,iBAAjF,EAAoGC,oBAApG,EAA0HC,oBAA1H,QAAsJ,+BAAtJ;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,6BAAnC;;AAEA,MAAMC,YAAY,GAAG,MAAK,MAAOC,QAAP,IAAmB;AAC7C,MAAG;AACCA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEN;AAAP,KAAD,CAAR,CADD,CAEC;;AACA,UAAM;AAACO,MAAAA;AAAD,QAAS,MAAML,KAAK,CAACM,GAAN,CAAU,oCAAV,CAArB;AACAH,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEL,oBAAP;AAA6BQ,MAAAA,OAAO,EAACF;AAArC,KAAD,CAAR;AACH,GALD,CAOA,OAAMG,KAAN,EAAY;AACRL,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEP,iBAAP;AAA0BU,MAAAA,OAAO,EAACC,KAAK,CAACC;AAAxC,KAAD,CAAR;AAEH;AACA,CAZD;;AAcA,MAAMC,oBAAoB,GAAG,MAAK,MAAOP,QAAP,IAAmB;AACjD,MAAG;AACCA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEN;AAAP,KAAD,CAAR,CADD,CAEC;;AACA,UAAM;AAACa,MAAAA;AAAD,QAAU,MAAMX,KAAK,CAACM,GAAN,CAAU,oCAAV,CAAtB;AAEAM,IAAAA,IAAI,CAACD,KAAL,GAAaE,QAAQ,CAACR,IAAT,CAAcS,MAAd,CAAqBC,MAArB,CAA4BC,IAAI,IAAIA,IAAI,CAACC,MAAL,CAAYC,MAAZ,KAAuB,UAA3D,EAAuEC,GAAvE,CAA2EH,IAAI,IAAI;AAC5F,aAAO;AACJI,QAAAA,EAAE,EAAEJ,IAAI,CAACI,EADL;AAEJ,WAAGJ,IAAI,CAACC;AAFJ,OAAP;AAIF,KALW,CAAb;AAOAd,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEL,oBAAP;AAA6BQ,MAAAA,OAAO,EAACI;AAArC,KAAD,CAAR;AACH,GAbD,CAeA,OAAMH,KAAN,EAAY;AACRL,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEP,iBAAP;AAA0BU,MAAAA,OAAO,EAACC,KAAK,CAACC;AAAxC,KAAD,CAAR;AAEH;AACA,CApBL;;AAsBA,MAAMY,cAAc,GAAIC,SAAD,IAAe,MAAOnB,QAAP,IAAmB;AACrD,MAAG;AACCA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAET,uBAAP;AAAgCY,MAAAA,OAAO,EAAEe;AAAzC,KAAD,CAAR;AACA,UAAM;AAACjB,MAAAA;AAAD,QAAS,MAAML,KAAK,CAACM,GAAN,CAAU,uCAAuCgB,SAAjD,CAArB;AACAnB,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAGR,uBAAR;AAAiCW,MAAAA,OAAO,EAAEF;AAA1C,KAAD,CAAR;AACH,GAJD,CAKA,OAAMG,KAAN,EAAY;AACRL,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEV,oBAAP;AAA6Ba,MAAAA,OAAO,EAACC,KAAK,CAACC;AAA3C,KAAD,CAAR;AACH;AACJ,CATD;;AAWA,SAAQP,YAAR,EAAsBmB,cAAtB","sourcesContent":["import { PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS } from \"../constants/productConstants\"\nimport axios from 'axios';\nimport { productListReducer } from \"../reducers/productReducers\";\n\nconst listProducts = () =>async (dispatch) =>{\ntry{\n    dispatch({type: PRODUCT_LIST_REQUEST});\n    //ajax request to server\n    const {data} = await axios.get(\"http://localhost:5000/api/products\");\n    dispatch({type: PRODUCT_LIST_SUCCESS, payload:data});\n}\n\ncatch(error){\n    dispatch({type: PRODUCT_LIST_FAIL, payload:error.message});\n   \n}\n}\n\nconst listProductsFiltered = () =>async (dispatch) =>{\n    try{\n        dispatch({type: PRODUCT_LIST_REQUEST});\n        //ajax request to server\n        const {items} = await axios.get(\"http://localhost:5000/api/products\");\n\n        self.items = response.data.record.filter(item => item.fields.fxPage === \"TestPage\").map(item => {\n            return {\n               id: item.id,\n               ...item.fields\n            }      \n         })\n\n        dispatch({type: PRODUCT_LIST_SUCCESS, payload:items});\n    }\n    \n    catch(error){\n        dispatch({type: PRODUCT_LIST_FAIL, payload:error.message});\n       \n    }\n    }\n\nconst detailsProduct = (productId) => async (dispatch) =>{\n    try{\n        dispatch({type: PRODUCT_DETAILS_REQUEST, payload: productId});\n        const {data} = await axios.get(\"http://localhost:5000/api/products\" + productId);\n        dispatch({type : PRODUCT_DETAILS_SUCCESS, payload: data});\n    }\n    catch(error){\n        dispatch({type: PRODUCT_DETAILS_FAIL, payload:error.message});\n    }   \n}\n\nexport {listProducts ,detailsProduct }"]},"metadata":{},"sourceType":"module"}