{"ast":null,"code":"import { PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS } from \"../constants/productConstants\";\nimport axios from 'axios';\nimport { productListReducer } from \"../reducers/productReducers\";\n\nconst listProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    }); //ajax request to server\n\n    const {\n      data\n    } = await axios.get(\"http://localhost:5000/api/products\");\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst listProductsFiltered = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    }); //ajax request to server\n\n    const {\n      items\n    } = await axios.get(\"http://localhost:5000/api/products\");\n    items = response.data.record.filter(item => item.category === \"Gaming Consoles\").map(item => {\n      return {\n        id: item._id,\n        name: item.name,\n        category: item.category,\n        image: item.image,\n        price: item.price,\n        brand: item.brand,\n        stock: item.stock,\n        description: item.description\n      };\n    });\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: items\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst detailsProduct = productId => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.get(\"http://localhost:5000/api/products\" + productId);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { listProducts, detailsProduct, listProductsFiltered };","map":{"version":3,"sources":["/home/harsh/Desktop/22168-HarshMaru/sde/ecom/ecom/frontend/src/actions/productActions.js"],"names":["PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","axios","productListReducer","listProducts","dispatch","type","data","get","payload","error","message","listProductsFiltered","items","response","record","filter","item","category","map","id","_id","name","image","price","brand","stock","description","detailsProduct","productId"],"mappings":"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","sourcesContent":["import { PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS } from \"../constants/productConstants\"\nimport axios from 'axios';\nimport { productListReducer } from \"../reducers/productReducers\";\n\nconst listProducts = () =>async (dispatch) =>{\ntry{\n    dispatch({type: PRODUCT_LIST_REQUEST});\n    //ajax request to server\n    const {data} = await axios.get(\"http://localhost:5000/api/products\");\n    dispatch({type: PRODUCT_LIST_SUCCESS, payload:data});\n}\n\ncatch(error){\n    dispatch({type: PRODUCT_LIST_FAIL, payload:error.message});\n   \n}\n}\n\nconst listProductsFiltered = () =>async (dispatch) =>{\n    try{\n        dispatch({type: PRODUCT_LIST_REQUEST});\n        //ajax request to server\n        const {items} = await axios.get(\"http://localhost:5000/api/products\");\n\n        items = response.data.record.filter(item => item.category === \"Gaming Consoles\").map(item => {\n            return {\n               id: item._id,\n               name: item.name,\n               category: item.category,\n               image: item.image,\n               price: item.price,\n               brand: item.brand,\n               stock: item.stock,\n               description:item.description\n               \n            }      \n         })\n\n        dispatch({type: PRODUCT_LIST_SUCCESS, payload:items});\n    }\n    \n    catch(error){\n        dispatch({type: PRODUCT_LIST_FAIL, payload:error.message});\n       \n    }\n    }\n\nconst detailsProduct = (productId) => async (dispatch) =>{\n    try{\n        dispatch({type: PRODUCT_DETAILS_REQUEST, payload: productId});\n        const {data} = await axios.get(\"http://localhost:5000/api/products\" + productId);\n        dispatch({type : PRODUCT_DETAILS_SUCCESS, payload: data});\n    }\n    catch(error){\n        dispatch({type: PRODUCT_DETAILS_FAIL, payload:error.message});\n    }   \n}\n\nexport {listProducts ,detailsProduct, listProductsFiltered }"]},"metadata":{},"sourceType":"module"}