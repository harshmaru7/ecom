{"ast":null,"code":"import axios from 'axios';\nimport Cookie from \"js-cookie\";\nimport { ADD_TO_CART, CART_REMOVE_ITEM } from '../constants/cartConstants';\n\nconst addToCart = (productId, qty) => async (dispatch, getState) => {\n  try {\n    const {\n      data\n    } = await axios.get(\"http://localhost:5000/api/products\" + productId);\n    dispatch({\n      type: ADD_TO_CART,\n      payload: {\n        product: data._id,\n        name: data.name,\n        image: data.image,\n        price: data.price,\n        stock: data.stock,\n        qty\n      }\n    });\n    const {\n      cart: {\n        cartItems\n      }\n    } = getState();\n    Cookie.set(\"cartItems\", JSON.stringify(cartItems)); //to save the cart items into the cookie\n  } catch (error) {}\n};\n\nconst removeFromCart = productId => dispatch => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: productId\n  });\n  const {\n    cart: {\n      cartItems\n    }\n  } = getState();\n  Cookie.set(\"cartItems\", JSON.stringify(cartItems));\n};\n\nexport { addToCart, removeFromCart }; //cookie used to keep the cart with items filled even after refresh","map":{"version":3,"sources":["/home/harsh/Desktop/22168-HarshMaru/sde/ecom/ecom/frontend/src/actions/cartActions.js"],"names":["axios","Cookie","ADD_TO_CART","CART_REMOVE_ITEM","addToCart","productId","qty","dispatch","getState","data","get","type","payload","product","_id","name","image","price","stock","cart","cartItems","set","JSON","stringify","error","removeFromCart"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,WAAT,EAAsBC,gBAAtB,QAA8C,4BAA9C;;AACA,MAAMC,SAAS,GAAG,CAACC,SAAD,EAAWC,GAAX,KAAmB,OAAOC,QAAP,EAAiBC,QAAjB,KAA6B;AAC9D,MAAI;AACA,UAAM;AAACC,MAAAA;AAAD,QAAU,MAAMT,KAAK,CAACU,GAAN,CAAU,uCAAuCL,SAAjD,CAAtB;AACAE,IAAAA,QAAQ,CAAC;AAACI,MAAAA,IAAI,EAACT,WAAN;AAAmBU,MAAAA,OAAO,EAAE;AACjCC,QAAAA,OAAO,EAAEJ,IAAI,CAACK,GADmB;AAEjCC,QAAAA,IAAI,EAAGN,IAAI,CAACM,IAFqB;AAGjCC,QAAAA,KAAK,EAAEP,IAAI,CAACO,KAHqB;AAIjCC,QAAAA,KAAK,EAAER,IAAI,CAACQ,KAJqB;AAKjCC,QAAAA,KAAK,EAAET,IAAI,CAACS,KALqB;AAMjCZ,QAAAA;AANiC;AAA5B,KAAD,CAAR;AASA,UAAM;AAACa,MAAAA,IAAI,EAAE;AAACC,QAAAA;AAAD;AAAP,QAAqBZ,QAAQ,EAAnC;AACAP,IAAAA,MAAM,CAACoB,GAAP,CAAW,WAAX,EAAuBC,IAAI,CAACC,SAAL,CAAeH,SAAf,CAAvB,EAZA,CAYoD;AAEvD,GAdD,CAcE,OAAOI,KAAP,EAAc,CAEf;AACJ,CAlBD;;AAoBA,MAAMC,cAAc,GAAIpB,SAAD,IAAgBE,QAAD,IAAa;AAC/CA,EAAAA,QAAQ,CAAC;AAACI,IAAAA,IAAI,EAAER,gBAAP;AAAyBS,IAAAA,OAAO,EAACP;AAAjC,GAAD,CAAR;AAEA,QAAM;AAACc,IAAAA,IAAI,EAAE;AAACC,MAAAA;AAAD;AAAP,MAAqBZ,QAAQ,EAAnC;AACAP,EAAAA,MAAM,CAACoB,GAAP,CAAW,WAAX,EAAuBC,IAAI,CAACC,SAAL,CAAeH,SAAf,CAAvB;AACH,CALD;;AAOA,SAAQhB,SAAR,EAAmBqB,cAAnB,G,CAGA","sourcesContent":["import axios from 'axios';\nimport Cookie from \"js-cookie\";\nimport { ADD_TO_CART, CART_REMOVE_ITEM } from '../constants/cartConstants';\nconst addToCart = (productId,qty) => async (dispatch, getState) =>{\n    try {\n        const {data} =  await axios.get(\"http://localhost:5000/api/products\" + productId);\n        dispatch({type:ADD_TO_CART, payload :{\n            product: data._id,\n            name : data.name,\n            image: data.image,\n            price: data.price,\n            stock: data.stock,\n            qty\n        }});\n\n        const {cart :{cartItems}} =getState();\n        Cookie.set(\"cartItems\",JSON.stringify(cartItems));  //to save the cart items into the cookie\n\n    } catch (error) {\n        \n    }\n}\n\nconst removeFromCart = (productId) => (dispatch) =>{\n    dispatch({type: CART_REMOVE_ITEM, payload:productId});\n\n    const {cart :{cartItems}} =getState();\n    Cookie.set(\"cartItems\",JSON.stringify(cartItems));\n}\n\nexport {addToCart, removeFromCart}\n\n\n//cookie used to keep the cart with items filled even after refresh"]},"metadata":{},"sourceType":"module"}